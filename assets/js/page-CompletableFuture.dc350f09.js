(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{1053:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("jdk 1.8 新增的用于处理并发任务的一个工具类，jdk9 做了增强。\n他实现 CompletionStage 接口定义的所有动作 api ，使得我们可以直接通过这些 api 对任意动作根据实际场景进行组合。\n他实现 Future 接口的相关 api ，使得我们可以直接通过这些 api 后去异步任务的结果。")]),t._v(" "),s("p",[s("strong",[t._v("经典下单场景")])]),t._v(" "),s("ul",[s("li",[t._v("库存减")]),t._v(" "),s("li",[t._v("订单增")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 案例代码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GlobalTransactional")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("purchase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" commodityCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" orderCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 采用并行方式触发任务")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" exceptionally "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("supplyAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 库存减")]),t._v("\n                    stockFeignClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deduct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commodityCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenCombine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompletableFuture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("supplyAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 订单增")]),t._v("\n                    orderFeignClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" commodityCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" state1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" state2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exceptionally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("throwable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("exceptionally"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"账户或库存不足,执行回滚"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h2",{attrs:{id:"常用-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用-api"}},[t._v("#")]),t._v(" 常用 API")]),t._v(" "),s("h3",{attrs:{id:"准备运行一个异步任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备运行一个异步任务"}},[t._v("#")]),t._v(" 准备运行一个异步任务")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("api")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("详情")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("runAsync(Runnable)")])]),t._v(" "),s("td",[t._v("塞入一个没有返回值的异步任务")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("runAsync(Runnable,Executor)")])]),t._v(" "),s("td",[t._v("指定线程池塞入一个没有返回值的异步任务")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("supplyAsync(Supplier<U>)")])]),t._v(" "),s("td",[t._v("塞入一个有返回值的异步任务")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("supplyAsync(Supplier<U>,Executor)")])]),t._v(" "),s("td",[t._v("指定线程池塞入一个有返回值的异步任务")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"构建任务链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建任务链"}},[t._v("#")]),t._v(" 构建任务链")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("api")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("详情")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("thenAcceptBoth(CompletionStage<U> c, BiConsumer<T, U>)")])]),t._v(" "),s("td",[t._v("将上一个任务与入参任务 c 并行处理，得到两个结果进行消费")]),t._v(" "),s("td",[t._v("用于组合两个并行任务，无返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("thenCombine(CompletionStage<U> c, BiFunction<T, U, R> b)")])]),t._v(" "),s("td",[t._v("将上一个任务与入参任务 c 并行处理，得到两个的结果后执行 b 函数并返回一个值")]),t._v(" "),s("td",[t._v("用于组合两个并行任务，有返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("runAfterBoth(CompletionStage<?> other,Runnable action)")])]),t._v(" "),s("td",[t._v("将上一个任务与入参任务 other 并行处理，两个执行完后执行 action")]),t._v(" "),s("td",[t._v("不管上两个的结果，无返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("thenCompose(Function<T, CompletionStage<U>>)")])]),t._v(" "),s("td",[t._v("基于上个任务的结果进行下一个任务")]),t._v(" "),s("td",[t._v("用户组合两个具有先后顺序的串行任务")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("thenAccept(Consumer<T>)")])]),t._v(" "),s("td",[t._v("消费上一个任务的结果")]),t._v(" "),s("td",[t._v("中间消费")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("thenRun(Runnable action)")])]),t._v(" "),s("td",[t._v("上个任务执行，执行下个任务")]),t._v(" "),s("td",[t._v("连续任务处理，都没有返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("thenApply(Function<T, U>)")])]),t._v(" "),s("td",[t._v("基于上一个任务的结果进行处理再返回")]),t._v(" "),s("td",[t._v("也可以返回一个 CompletableFuture 那么效果和 thenCompose 一样")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("applyToEither(CompletionStage<T>, Function<T, U>)")])]),t._v(" "),s("td",[t._v("两个任务并行执行，先得到的结果进行转换")]),t._v(" "),s("td",[t._v("等公交，谁先到做谁的公交回家")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("acceptEither(CompletionStage<T>, Consumer<T>)")])]),t._v(" "),s("td",[t._v("两个任务并行执行，先得到的结果进行消费")]),t._v(" "),s("td",[t._v("卖包子，猪肉白菜陷的与猪肉胡萝卜馅的，哪个先熟吃哪个")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("allOf(CompletableFuture<?>... cfs)")])]),t._v(" "),s("td",[t._v("当所有给定的 CompletableFuture 完成时，返回一个新的 CompletableFuture。")]),t._v(" "),s("td",[t._v("所有的都完成结束，不返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("anyOf(CompletableFuture<?>... cfs)")])]),t._v(" "),s("td",[t._v("当任意一个给定的 CompletableFuture 完成时，返回一个新的 CompletableFuture。")]),t._v(" "),s("td",[t._v("任意一个完成时结束，返回这个完成的返回的值")])])])]),t._v(" "),s("h3",{attrs:{id:"获取结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取结果"}},[t._v("#")]),t._v(" 获取结果")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("api")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("详情")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("join()")])]),t._v(" "),s("td",[t._v("获得最终结果")]),t._v(" "),s("td",[t._v("不抛出异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("get() throws InterruptedException, ExecutionException")])]),t._v(" "),s("td",[t._v("获得最终结果")]),t._v(" "),s("td",[t._v("可能抛出 取消异常、执行异常或者中断异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException")])]),t._v(" "),s("td",[t._v("获得最终结果")]),t._v(" "),s("td",[t._v("除了上面的三个异常还有可能抛出超时异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("getNow(T valueIfAbsent)")])]),t._v(" "),s("td",[t._v("该方法不阻塞，如果任务尚未完成，则返回默认值。")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"设定默认值、默认抛出异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设定默认值、默认抛出异常"}},[t._v("#")]),t._v(" 设定默认值、默认抛出异常")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("api")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("详情")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("complete(T valueIfAbsent)")])]),t._v(" "),s("td",[t._v("如果此时任务没执行完成就设置一个默认值")]),t._v(" "),s("td",[t._v("如果调用该方法时，任务已经执行完成，返回 false。未执行完成则返回 true，并将其状态设置为完成状态")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("completeExceptionally(Throwable)")])]),t._v(" "),s("td",[t._v("如果此时任务没执行完成就定义一个抛出异常")]),t._v(" "),s("td",[t._v("如果调用该方法时，任务已经执行完成，返回 false。未执行完成则返回 true，并将其状态设置为完成状态，获取结果时会抛出该设置的异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("obtrudeValue(T value)")])]),t._v(" "),s("td",[t._v("强行设置返回值")]),t._v(" "),s("td",[t._v("不管任务此时是否完成都设置一个返回值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("obtrudeException(Throwable ex)")])]),t._v(" "),s("td",[t._v("强行设置抛出异常")]),t._v(" "),s("td",[t._v("不管任务此时是否完成都定义一个抛出异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("CompletableFuture<T> exceptionally(Function<Throwable, ? extends T> )")])]),t._v(" "),s("td",[t._v("设置任务出异常后应该返回什么")]),t._v(" "),s("td",[t._v("当前面的任务出了异常时，就会返回T值；否则还是返回原先前面任务应该返回的值。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("handle(BiFunction<T, Throwable, U>)")])]),t._v(" "),s("td",[t._v("类似于 thenApply 和 exceptionally 的结合")]),t._v(" "),s("td",[t._v("任务成功则 T 为正常值， Throwable 为 null 。任务失败则 T 为 null ， Throwable 为抛出的异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("whenComplete(BiConsumer<T, Throwable>)")])]),t._v(" "),s("td",[t._v("执行过程中获取结果与异常")]),t._v(" "),s("td",[t._v("任务成功则 T 为正常值， Throwable 为 null 。任务失败则 T 为 null ， Throwable 为抛出的异常")])])])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("基本能够覆盖生活中的所有并行、串行处理流程组合。\n所有的 API 都是围绕着 Future 之间的运行关系(先后、并行)，然后针对每个 Future 执行可能得到的结果或者抛出的异常提供相应情景下的 API。\n使用的话，我们可以直接构思一个操作就是一个 CompletableFuture 实例，而我们的所有业务的操作流程就是一个个 CompletableFuture 组合而成的，至于之间的关系是 并行 还是 串行，每个任务执行的结果，异常处理。我们都可以通过提供的 api 进行自由的组合设置。有个前提就是使用这个，必须先真正理解 jdk 的函数式接口抽象。需要有面向过程 "),s("strong",[s("code",[t._v("动作/过程")])]),t._v(" 的思维。")]),t._v(" "),s("p",[t._v("CompletableFuture 大致 API 笼统含义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("then")]),t._v(" 围绕 Future 关系组合。只有 thenCombine 相关的三个是并行，别的都是串行。")]),t._v(" "),s("li",[s("code",[t._v("handle")]),t._v(" 中间处理流程，类似于 stream 的 map API")]),t._v(" "),s("li",[s("code",[t._v("Either")]),t._v(" 围绕谁先到谁说了算")]),t._v(" "),s("li",[s("code",[t._v("complete")]),t._v(" 与任务完成状态相关。要么中途临时插手完成任务，要么设置任务完成时需要进行的操作")]),t._v(" "),s("li",[s("code",[t._v("exceptionally**")]),t._v(" 围绕异常相关处理")]),t._v(" "),s("li",[s("code",[t._v("get")]),t._v(" 与 "),s("code",[t._v("join")]),t._v(" 都是获取结果， get 多几个异常，并且可以设置等待时间")]),t._v(" "),s("li",[s("code",[t._v("run")]),t._v(" 不接收上次的运行结果，直接往下继续")]),t._v(" "),s("li",[s("code",[t._v("failed")]),t._v(" 异常失败情景处理")]),t._v(" "),s("li",[s("code",[t._v("allOf")]),t._v(" 和 "),s("code",[t._v("anyOf")]),t._v(" 这两个一个是全部完成返回，一个是任意一个完成返回。具体的返回值判定可以看下文档")])])])}),[],!1,null,null,null);a.default=e.exports}}]);