(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{1086:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"spring-cloud-circuit-breaker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-circuit-breaker"}},[t._v("#")]),t._v(" Spring Cloud Circuit Breaker")]),t._v(" "),n("ul",[n("li",[t._v("官网地址："),n("a",{attrs:{href:"https://spring.io/projects/spring-cloud-circuitbreake",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://spring.io/projects/spring-cloud-circuitbreake"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("官方案例地址："),n("a",{attrs:{href:"https://github.com/spring-cloud-samples/spring-cloud-circuitbreaker-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/spring-cloud-samples/spring-cloud-circuitbreaker-demo"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("strong",[t._v("核心思想还得看这个：")]),n("a",{attrs:{href:"https://resilience4j.readme.io/docs/circuitbreaker",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://resilience4j.readme.io/docs/circuitbreaker"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[t._v("Spring Cloud 断路器提供了跨不同断路器实现的抽象。它提供了在您的应用程序中使用的一致 API，让您开发人员可以选择最适合您的应用程序需求的断路器实现。")]),t._v(" "),n("h3",{attrs:{id:"支持的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#支持的实现"}},[t._v("#")]),t._v(" 支持的实现")]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://github.com/Netflix/Hystrix",target:"_blank",rel:"noopener noreferrer"}},[t._v("Netfix Hystrix"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/resilience4j/resilience4j",target:"_blank",rel:"noopener noreferrer"}},[t._v("Resilience4J"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/alibaba/Sentinel",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sentinel"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/spring-projects/spring-retry",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Retry"),n("OutboundLink")],1)])])]),t._v(" "),n("h4",{attrs:{id:"相应的引用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相应的引用配置"}},[t._v("#")]),t._v(" 相应的引用配置")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Hystrix - "),n("code",[t._v("org.springframework.cloud:spring-cloud-starter-netflix-hystrix")])])]),t._v(" "),n("li",[n("p",[t._v("Resilience4J - "),n("code",[t._v("org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j")])])]),t._v(" "),n("li",[n("p",[t._v("Reactive Resilience4J - "),n("code",[t._v("org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j")])])]),t._v(" "),n("li",[n("p",[t._v("Spring Retry - "),n("code",[t._v("org.springframework.cloud:spring-cloud-starter-circuitbreaker-spring-retry")])])]),t._v(" "),n("li",[n("p",[t._v("Sentinal - "),n("code",[t._v("org.springframework.cloud:spring-cloud-starter-circuitbreaker-sentinal")])])])]),t._v(" "),n("h2",{attrs:{id:"极简使用-web"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#极简使用-web"}},[t._v("#")]),t._v(" 极简使用 Web")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoControllerService")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),t._v(" rest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerFactory")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoControllerService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),t._v(" rest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerFactory")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rest "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cbFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 断路器工厂创建一个 slow 实例，调度一个 rest 操作，如果断路抛出异常则执行 fallback 处理操作，需要我们注册一个 path 为 "/fallback" 的 Requestmapping 实例')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" rest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/slow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" throwable "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fallback"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"极简使用-reactive-web"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#极简使用-reactive-web"}},[t._v("#")]),t._v(" 极简使用 Reactive Web")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoControllerService")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReactiveCircuitBreakerFactory")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebClient")]),t._v(" webClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoControllerService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebClient")]),t._v(" webClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReactiveCircuitBreakerFactory")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webClient "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" webClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cbFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// webClient 创建一个响应式请求动作，这个动作交由断路器工厂创建一个 slow 实例来触发，有问题断路抛出异常则执行 fallback 处理操作，需要我们注册一个 path 为 "/fallback" 的 Requestmapping 实例')]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" webClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/slow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("retrieve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bodyToMono")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tit "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" cbFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" throwable "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fallback"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("blockquote",[n("p",[t._v("Spring 团队为了推行 resilience4j 也是强， Spring Cloud Circuit Breaker的真正"),n("a",{attrs:{href:"https://resilience4j.readme.io/docs/circuitbreaker",target:"_blank",rel:"noopener noreferrer"}},[t._v("思想"),n("OutboundLink")],1),t._v("要看 resilience4j 的文档，我都不知道怎么点进去的，有毒。")])]),t._v(" "),n("h1",{attrs:{id:"resilience4j"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resilience4j"}},[t._v("#")]),t._v(" resilience4j")]),t._v(" "),n("p",[t._v("resilience4j 文档："),n("a",{attrs:{href:"https://resilience4j.readme.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://resilience4j.readme.io/"),n("OutboundLink")],1),t._v("\n以下内容，部分为 google 机翻")]),t._v(" "),n("h2",{attrs:{id:"circuit-breaker-设计思想"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#circuit-breaker-设计思想"}},[t._v("#")]),t._v(" Circuit Breaker 设计思想")]),t._v(" "),n("p",[t._v("CircuitBreaker 是通过三个典型状态："),n("code",[t._v("CLOSED")]),t._v("、"),n("code",[t._v("OPEN")]),t._v(" 和 "),n("code",[t._v("HALF_OPEN")]),t._v(" 以及"),n("s",[t._v("两个")]),t._v("特殊状态 "),n("code",[t._v("DISABLED")]),t._v(" 、和 "),n("code",[t._v("FORCED_OPEN")]),t._v(" 实现的")]),t._v(" "),n("p",[n("img",{attrs:{src:a(680),alt:"state_machine",loading:"lazy"}})]),t._v(" "),n("p",[t._v("此处，网站文档未及时更新，本人在 "),n("code",[t._v("io.github.resilience4j:resilience4j-circuitbreaker:1.7.0")]),t._v(" 版本的 "),n("code",[t._v("io.github.resilience4j.circuitbreaker.CircuitBreaker.State")]),t._v(" 看到的状态有六个,漏了 "),n("code",[t._v("METRICS_ONLY")]),t._v(" ，文档上只说了五个。"),n("sup",{staticClass:"footnote-ref"},[n("a",{attrs:{href:"#footnote1"}},[t._v("[1]")]),n("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})])]),t._v(" "),n("p",[n("img",{attrs:{src:a(681),alt:"",loading:"lazy"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(682),alt:"",loading:"lazy"}})]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("枚举值")]),t._v(" "),n("th",[t._v("Order，越小的优先级越高")]),t._v(" "),n("th",[t._v("是否发布事件")]),t._v(" "),n("th",[t._v("枚举值说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("CLOSED")]),t._v(" "),n("td",[t._v("0")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("断路器已跳闸，不允许请求通过")])]),t._v(" "),n("tr",[n("td",[t._v("OPEN")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("断路器正常运行并允许请求通过")])]),t._v(" "),n("tr",[n("td",[t._v("HALF_OPEN")]),t._v(" "),n("td",[t._v("2")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("断路器已完成其等待间隔并将允许请求")])]),t._v(" "),n("tr",[n("td",[t._v("DISABLED")]),t._v(" "),n("td",[t._v("3")]),t._v(" "),n("td",[t._v("false")]),t._v(" "),n("td",[t._v("断路器未运行（无状态转换，无事件）并允许所有请求通过")])]),t._v(" "),n("tr",[n("td",[t._v("FORCED_OPEN")]),t._v(" "),n("td",[t._v("4")]),t._v(" "),n("td",[t._v("false")]),t._v(" "),n("td",[t._v("断路器没有运行（没有状态转换，没有事件）并且不允许任何请求通过")])]),t._v(" "),n("tr",[n("td",[t._v("METRICS_ONLY")]),t._v(" "),n("td",[t._v("5")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("断路器正在收集指标、发布事件并允许所有请求通过但不转换到其他状态")])])])]),t._v(" "),n("p",[t._v("CircuitBreaker 使用滑动窗口来存储和汇总调用结果，计算故障率进行阈值判定。可以在基于计数的滑动窗口和基于时间的滑动窗口之间进行选择。")]),t._v(" "),n("ul",[n("li",[t._v("基于计数的滑动窗口聚合最后 N 次调用的结果。")]),t._v(" "),n("li",[t._v("基于时间的滑动窗口聚合了最后 N 秒的调用结果。")])]),t._v(" "),n("h3",{attrs:{id:"状态切换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#状态切换"}},[t._v("#")]),t._v(" 状态切换")]),t._v(" "),n("p",[t._v("当故障率等于或大于可配置阈值时，CircuitBreaker 的状态从 CLOSED 变为 OPEN 。例如，当超过 50% 的调用失败时，此时不会再蠢蠢的接着发送请求，直接走异常处理逻辑。\n过了指定的等待时间后，CircuitBreaker 的状态从 CLOSED 变为 HALF_OPEN。发送指定个请求后，如果失败率或慢速调用率等于或大于配置的阈值，则状态变回 OPEN。如果失败率和慢调用率低于阈值，则状态变回 CLOSED。")]),t._v(" "),n("p",[t._v("默认的情况下，所有的异常都算做失败，计算故障率。但是也支持自定义配置，可配置异常类型断言，判断异常类型。或者有两个异常数组，直接配置这两个数组：\nrecordExceptions：抛出这个数组里面的异常的就计为失败处理\nignoreExceptions：抛出这个数组里面的异常也算作成功处理\n如果异常都不在这两个里面，那么既不算做成功，也不算做失败。这里需要注意的是，故障率计算必须有一个成型的滑动窗口才会计算。例如，计数模式的滑动窗口，如果计数数为 8 ，那么即使失败了 7 次，也不会触发断路器阈值判定。")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customizer")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resilience4JCircuitBreakerFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slowCustomizer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" factory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" factory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" builder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("circuitBreakerConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofDefaults")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeLimiterConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeLimiterConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("custom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeoutDuration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 超过4秒没有响应就认为请求失败")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("circuitBreakerConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("custom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimumNumberOfCalls")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小失败率计算呼叫次数，只有呼叫次数大于这个值才会计算失败率")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("failureRateThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失败率阈值设置，如果大于 30% 的失败了，就启动断路器")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitDurationInOpenState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 断路器打开后保持 30 秒后切换为半开状态，又可以有限的发送请求")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("permittedNumberOfCallsInHalfOpenState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在半开状态允许调用，调用 20 次后重新计算阈值，判断断路器打不打开")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("recordExceptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设定计算失败数的异常，默认统计所有的异常")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreExceptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设定不计算失败数的异常，即不再 record 里面的也不在 ignore 里面的就不纳入故障率统计")]),t._v("\n                                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("p",[t._v("断路器支持另外两种特殊状态，DISABLED（始终允许访问）和 FORCED_OPEN（始终拒绝访问）。在这两种状态下，不会生成断路器事件（除了状态转换），也不会记录任何指标。退出这些状态的唯一方法是触发状态转换或重置断路器。")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),n("p",[t._v("断路器是线程安全的，如下所示：")]),t._v(" "),n("ul",[n("li",[t._v("断路器的状态存储在 AtomicReference 中")]),t._v(" "),n("li",[t._v("CircuitBreaker 使用原子操作来更新具有无副作用函数的状态。")]),t._v(" "),n("li",[t._v("滑动窗口内状态的更新与读取是同步的")])])]),t._v(" "),n("p",[t._v("这意味着应该保证原子性，并且只有一个线程能够在某个时间点更新状态或滑动窗口。")]),t._v(" "),n("p",[t._v("但是 CircuitBreaker 不会同步函数调用。这意味着函数调用本身不是关键部分的一部分。否则，CircuitBreaker 会带来巨大的性能损失和瓶颈。缓慢的函数调用会对整体性能/吞吐量产生巨大的负面影响。")]),t._v(" "),n("p",[t._v("如果有 20 个并发线程请求执行某个函数的权限，并且 CircuitBreaker 的状态为关闭，则允许所有线程调用该函数。即使滑动窗口大小为 15。滑动窗口并不意味着只允许 15 个调用并发运行。如果要限制并发线程数，请使用 Bulkhead。您可以将 Bulkhead 和 CircuitBreaker 结合使用。")]),t._v(" "),n("p",[n("strong",[t._v("带有 1 个线程的示例：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(683),alt:"",loading:"lazy"}})]),t._v(" "),n("p",[n("strong",[t._v("带有 3 个线程的示例：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(684),alt:"",loading:"lazy"}})]),t._v(" "),n("h2",{attrs:{id:"创建断路器注册表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建断路器注册表"}},[t._v("#")]),t._v(" 创建断路器注册表")]),t._v(" "),n("p",[t._v("Resilience4j 带有一个基于 ConcurrentHashMap 的内存，它提供线程安全和原子性保证。您可以使用 CircuitBreakerRegistry 管理（创建和检索）CircuitBreaker 实例。您可以为所有 CircuitBreaker 实例创建一个具有全局默认值的 CircuitBreakerRegistry，如下所示。CircuitBreakerRegistryCircuitBreakerConfig")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerRegistry")]),t._v(" circuitBreakerRegistry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerRegistry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofDefaults")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h2",{attrs:{id:"创建和配置断路器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建和配置断路器"}},[t._v("#")]),t._v(" 创建和配置断路器")]),t._v(" "),n("p",[t._v("您可以提供自己的自定义全局. 为了创建自定义全局 CircuitBreakerConfig，您可以使用 CircuitBreakerConfig 构建器。您可以使用构建器来配置以下属性。CircuitBreakerConfig")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("配置属性")]),t._v(" "),n("th",[t._v("默认值")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("failureRateThreshold")]),t._v(" "),n("td",[t._v("50")]),t._v(" "),n("td",[t._v("以百分比配置失败率阈值。"),n("br"),t._v("当故障率等于或大于阈值时，CircuitBreaker 转换为打开并开始短路呼叫。")])]),t._v(" "),n("tr",[n("td",[t._v("slowCallRateThreshold")]),t._v(" "),n("td",[t._v("100")]),t._v(" "),n("td",[t._v("以百分比配置阈值。当呼叫持续时间大于等于或大于阈值 "),n("code",[t._v("slowCallDurationThreshold")]),t._v(" 时，CircuitBreaker 将呼叫视为慢速呼叫。 当慢速呼叫的百分比等于或大于阈值时，CircuitBreaker 转换为打开并开始短路呼叫。")])]),t._v(" "),n("tr",[n("td",[t._v("slowCallDurationThreshold")]),t._v(" "),n("td",[t._v("60000 [毫秒]")]),t._v(" "),n("td",[t._v("配置持续时间阈值，超过该阈值呼叫被视为慢速并提高慢速呼叫率。")])]),t._v(" "),n("tr",[n("td",[t._v("permittedNumberOfCallsInHalfOpenState")]),t._v(" "),n("td",[t._v("10")]),t._v(" "),n("td",[t._v("配置断路器半开时允许的呼叫数。")])]),t._v(" "),n("tr",[n("td",[t._v("maxWaitDurationInHalfOpenState")]),t._v(" "),n("td",[t._v("0 [ms]")]),t._v(" "),n("td",[t._v("配置最大等待持续时间，该持续时间控制断路器在切换到打开之前可以保持在半开状态的最长时间。"),n("br"),t._v("值 0 表示断路器将在 HalfOpen 状态下无限等待，直到所有允许的调用都已完成。")])]),t._v(" "),n("tr",[n("td",[t._v("slidingWindowType")]),t._v(" "),n("td",[t._v("COUNT_BASED")]),t._v(" "),n("td",[t._v("配置用于在CircuitBreaker关闭时记录调用结果的滑动窗口类型。"),n("br"),t._v("滑动窗口可以是基于计数或基于时间的。"),n("br"),t._v("如果滑动窗口是 "),n("code",[t._v("COUNT_BASED")]),t._v(" ，则记录和汇总 "),n("code",[t._v("slipWindowSize")]),t._v(" 次的调用。"),n("br"),t._v("如果滑动窗口是 "),n("code",[t._v("TIME_BASED")]),t._v(" ，则记录和汇总 "),n("code",[t._v("slidingWindowSize")]),t._v(" 秒的调用。")])]),t._v(" "),n("tr",[n("td",[t._v("slidingWindowSize")]),t._v(" "),n("td",[t._v("100")]),t._v(" "),n("td",[t._v("配置用于在 CircuitBreaker 关闭时记录调用结果的滑动窗口的大小。")])]),t._v(" "),n("tr",[n("td",[t._v("minimumNumberOfCalls")]),t._v(" "),n("td",[t._v("100")]),t._v(" "),n("td",[t._v("配置在 CircuitBreaker 计算错误率或慢速调用率之前所需的最小调用次数（每个滑动窗口周期）。"),n("br"),t._v("例如，如果 minimumNumberOfCalls 为 10，则必须记录至少 10 次呼叫，然后才能计算失败率。"),n("br"),t._v("如果仅记录了 9 个呼叫，即使所有 9 个呼叫都失败，CircuitBreaker 也不会转换为打开状态。")])]),t._v(" "),n("tr",[n("td",[t._v("waitDurationInOpenState")]),t._v(" "),n("td",[t._v("60000 [ms]")]),t._v(" "),n("td",[t._v("断路器在从打开转换为半打开之前应等待的时间。")])]),t._v(" "),n("tr",[n("td",[t._v("automaticTransitionFromOpenToHalfOpenEnabled")]),t._v(" "),n("td",[t._v("false")]),t._v(" "),n("td",[t._v("如果设置为 true，则意味着 CircuitBreaker 将自动从打开状态转换为半打开状态，无需调用即可触发转换。一旦 waitDurationInOpenState 通过，就会创建一个线程来监视 CircuitBreakers 的所有实例以将它们转换为 HALF_OPEN。"),n("br"),t._v("然而，如果设置为 false，则只有在调用时才会发生到 HALF_OPEN 的转换，即使在 waitDurationInOpenState 被传递之后也是如此。这里的优点是没有线程监视所有 CircuitBreaker 的状态。")])]),t._v(" "),n("tr",[n("td",[t._v("recordExceptions")]),t._v(" "),n("td",[t._v("空数组")]),t._v(" "),n("td",[t._v("记录为失败并因此增加失败率的异常列表。"),n("br"),t._v("任何匹配或从列表之一继承的异常都算作失败。 如果您指定异常列表，则所有其他异常都算成功，除非它们被 "),n("code",[t._v("ignoreExceptions")]),t._v(" 配置明确忽略。")])]),t._v(" "),n("tr",[n("td",[t._v("ignoreExceptions")]),t._v(" "),n("td",[t._v("空数组")]),t._v(" "),n("td",[t._v("被忽略且既不视为失败也不视为成功的异常列表。"),n("br"),t._v("任何匹配或从列表之一继承的异常都不会被视为失败或成功，即使异常被 "),n("code",[t._v("recordExceptions")]),t._v(" 配置。")])]),t._v(" "),n("tr",[n("td",[t._v("recordFailurePredicate 失败计数断言")]),t._v(" "),n("td",[t._v("throwable -> true 默认匹配所有异常")]),t._v(" "),n("td",[t._v("一个自定义断言，用于评估是否应将异常记录为失败。"),n("br"),t._v("如果异常应计为失败，则断言必须返回 true；如果异常应计为成功，则断言必须返回 false。"),n("br"),t._v("除非异常被 "),n("code",[t._v("ignoreExceptions")]),t._v(" 配置显式忽略。")])]),t._v(" "),n("tr",[n("td",[t._v("ignoreExceptionPredicate 忽略异常断言")]),t._v(" "),n("td",[t._v("throwable -> false 默认不匹配所有异常")]),t._v(" "),n("td",[t._v("一个自定义断言，用于评估是否应忽略异常并且既不计为失败也不计为成功。"),n("br"),t._v("如果应忽略异常，断言必须返回 true;如果异常应计为失败，则断言必须返回 false。")])])])]),t._v(" "),n("h3",{attrs:{id:"常用代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用代码"}},[t._v("#")]),t._v(" 常用代码")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a custom configuration for a CircuitBreaker")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerConfig")]),t._v(" circuitBreakerConfig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("custom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("failureRateThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slowCallRateThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitDurationInOpenState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofMillis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slowCallDurationThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofSeconds")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("permittedNumberOfCallsInHalfOpenState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("minimumNumberOfCalls")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slidingWindowType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SlidingWindowType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TIME_BASED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slidingWindowSize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("recordException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" INTERNAL_SERVER_ERROR\n                 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("recordExceptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreExceptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BusinessException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OtherBusinessException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a CircuitBreakerRegistry with a custom global configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerRegistry")]),t._v(" circuitBreakerRegistry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreakerRegistry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circuitBreakerConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get or create a CircuitBreaker from the CircuitBreakerRegistry ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with the global default configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreaker")]),t._v(" circuitBreakerWithDefaultConfig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" circuitBreakerRegistry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("circuitBreaker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get or create a CircuitBreaker from the CircuitBreakerRegistry ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with a custom configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircuitBreaker")]),t._v(" circuitBreakerWithCustomConfig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" circuitBreakerRegistry "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("circuitBreaker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" circuitBreakerConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("hr",{staticClass:"footnotes-sep"}),t._v(" "),n("section",{staticClass:"footnotes"},[n("ol",{staticClass:"footnotes-list"},[n("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[n("p",[t._v("Spring cloud 版本为 "),n("code",[t._v("2020.0.0")]),t._v("，浏览网站时间为 2022/02/21 "),n("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[t._v("↩︎")])])])])])])}),[],!1,null,null,null);s.default=e.exports},680:function(t,s,a){t.exports=a.p+"assets/img/state_machine.788362fb.jpg"},681:function(t,s,a){t.exports=a.p+"assets/img/CircuitBreaker-State-Web.fc248b01.jpg"},682:function(t,s,a){t.exports=a.p+"assets/img/CircuitBreaker-State.be3063e8.jpg"},683:function(t,s,a){t.exports=a.p+"assets/img/circuit-breaker-Thread1.eba56f60.png"},684:function(t,s,a){t.exports=a.p+"assets/img/circuit-breaker-Multiplethreads.5c0b7687.png"}}]);